<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <sectionGroup name="common">
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging" />
    </sectionGroup>

    <sectionGroup name="spring">
      <section name="parsers" type="Spring.Context.Support.NamespaceParsersSectionHandler, Spring.Core"/>
      <section name='context' type='Spring.Context.Support.ContextHandler, Spring.Core'/>
      <section name="objects" type="Spring.Context.Support.DefaultSectionHandler, Spring.Core" />
    </sectionGroup>

    <section name="hostSettings" type="System.Configuration.NameValueSectionHandler, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net" />
  </configSections>

  <!-- These properties are referenced in client.xml -->
  <hostSettings>
    <add key="host.url" value="gtcp://localhost" />
    <add key="host.port" value="6835" />
  </hostSettings>
  
  <spring>

    <parsers>
      <parser type="Spring.Remoting.Config.RemotingNamespaceParser, Spring.Services"/>
      <parser type="Spring.Aop.Config.AopNamespaceParser, Spring.Aop" />
      <parser type="Spring.Data.Config.DatabaseNamespaceParser, Spring.Data" />
      <parser type="Spring.Transaction.Config.TxNamespaceParser, Spring.Data" />
    </parsers>

    <context>
		<resource uri="assembly://Baumax.Tester/Baumax.Tester.Remoting/client.xml" />
	</context>

  </spring>

  <common>
    <logging>
      <factoryAdapter type="Common.Logging.Log4Net.Log4NetLoggerFactoryAdapter, Common.Logging.Log4Net">
        <!-- choices are INLINE, FILE, FILE-WATCH, EXTERNAL-->
        <!-- otherwise BasicConfigurer.Configure is used   -->
        <!-- log4net configuration file is specified with key configFile-->
        <arg key="configType" value="INLINE" />
      </factoryAdapter>
    </logging>
  </common>

  <log4net debug="true">
    <appender name="AspNetTraceAppender" type="log4net.Appender.AspNetTraceAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="[%thread] %-5level - %message" />
      </layout>
    </appender>
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="Logs/log.txt" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="1000KB" />
      <staticLogFileName value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
      </layout>
    </appender>

    <appender name="TraceAppender" type="log4net.Appender.TraceAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%-5level %logger.%M - %message%newline" />
        <!--
            <conversionPattern value="%-5p: %m" />
            -->
      </layout>
    </appender>

    <!-- Set default logging level to DEBUG -->
    <root>
      <level value="ALL" />
      <appender-ref ref="TraceAppender" />
      <appender-ref ref="RollingFileAppender" />
    </root>
    <!--
		In Spring.NET there is a 1-1 correspondence between the logger name and
		the namespace of the class doing the logging...
	-->
    <logger name="Spring">
      <level value="WARN" />
    </logger>
    <logger name="NHibernate">
      <level value="WARN" />
    </logger>
  </log4net>

  <system.runtime.remoting>
    <application>
      <channels>
        <!-- <channel ref="tcp" port="0"> -->
        <!--MaxContentSize = "500000"-->
        <channel type="Belikov.GenuineChannels.GenuineTcp.GenuineTcpChannel, GenuineChannels"
            PersistentConnectionSendPingAfterInactivity = "1000"
            MaxQueuedItems = "1000"
            MaxTotalSize = "10000000"
            ReconnectionTries = "1000"
            SleepBetweenReconnection = "500"
            ConnectTimeout = "240000"
            Compression="true">
          <serverProviders>
            <formatter ref="binary" typeFilterLevel="Full" />
          </serverProviders>
          <clientProviders>
            <formatter ref="binary" typeFilterLevel="Full" />
          </clientProviders>
        </channel>
      </channels>
    </application>
  </system.runtime.remoting>

</configuration>